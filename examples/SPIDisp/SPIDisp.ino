#include <SPI.h> // SPIライブラリをインクルードする
#include "ST7735Lib.h"

#define MAX_TOKEN_LENGTH 32 // 各文字列の最大長

void splitString(const char *input, char output[][MAX_TOKEN_LENGTH], int *count) {
    char buffer[MAX_TOKEN_LENGTH];
    int i = 0, j = 0, token_count = 0;

    while (*input != '\0') {
        if (*input == ',') {
            buffer[j] = '\0';
            strcpy(output[token_count], buffer);
            token_count++;
            j = 0;
        } else {
            buffer[j++] = *input;
        }
        input++;
    }
    buffer[j] = '\0';
    strcpy(output[token_count], buffer);
    token_count++;

    *count = token_count;
}

// Bitmap data
const uint16_t sharaku[] = {0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,
0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,
0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x4A69,0x528A,0x52AA,0x4208,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,
0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x2124,0x528A,0x0862,0x4229,0x10A2,0x2945,0x39C7,0x2945,0x4A49,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,
0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x3186,0x0041,0x10A3,0x0882,0x10C3,0x0882,0x10A3,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0020,0x10A3,0x10A2,0x0882,0x0882,0x0882,0x0041,
0x0862,0x10A2,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x2104,0x0821,0x0862,0x0821,0x2145,0x2124,0x18C3,0x18C3,0x2965,0x2945,0x1082,0x2124,0x3186,0x1082,0x10A2,0x0861,0x1082,0x2965,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,
0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x2124,0x1082,0x08A2,0x39C7,0x5AEC,0x2945,0x39C7,0x10A3,0x4208,0x2124,0x0841,0x4208,0x3A08,0x4208,0x31C7,0x18E4,0x2966,0x0882,0x39E8,0x31A6,0x2124,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,
0x0821,0x0821,0x0821,0x0021,0x10A3,0x0861,0x18C3,0x31A6,0x4A49,0x3186,0x1082,0x18E4,0x10A3,0x10C3,0x10A3,0x1082,0x0882,0x0882,0x18C3,0x0862,0x18E3,0x0020,0x2124,0x39C7,0x2945,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0861,0x39C7,0x4A49,0x4A69,0x2985,0x0841,0x0882,0x10A3,0x10A3,0x10A3,0x10A3,0x10A3,0x10A3,
0x10A3,0x10A3,0x10A3,0x10A3,0x10C3,0x10A2,0x2145,0x4A69,0x0041,0x10A3,0x2104,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x2104,0x0862,0x18E3,0x5289,0x0041,0x2945,0x0882,0x10C3,0x10A3,0x10A3,0x10A3,0x10A3,0x10C3,0x10A3,0x10A3,0x10A3,0x10C3,0x18E4,0x10A3,0x10A3,0x10A2,0x1082,0x10A2,0x4228,0x0862,0x0841,0x2945,0x0821,0x0821,0x0821,0x0821,
0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x08A3,0x39E8,0x41E7,0x0062,0x4228,0x0021,0x1903,0x0862,0x10A3,0x10A3,0x10A3,0x10A3,0x10C3,0x10A3,0x10C3,0x10A3,0x10C3,0x18E3,0x10A3,0x10C3,0x0882,0x10A3,0x3186,0x4208,0x0882,0x528A,0x2104,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,
0x0821,0x0020,0x10A2,0x10A3,0x2965,0x10C3,0x0882,0x10A3,0x2966,0x4229,0x2124,0x2125,0x0882,0x39E7,0x10C3,0x10C3,0x0882,0x4228,0x1082,0x18C3,0x10A3,0x10A3,0x10A3,0x10C3,0x10C3,0x1082,0x18E4,0x1904,0x0841,0x10A3,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0021,0x0882,0x0041,0x2124,0x2125,0x0862,0x3186,0x0862,0x0862,0x0882,0x1904,0x2125,0x3A08,0x31A6,0x10C3,
0x31A7,0x0841,0x3186,0x10A2,0x1082,0x10A3,0x10A3,0x10C3,0x10A3,0x10C3,0x0882,0x4A69,0x4A6A,0x0021,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x39E7,0x0821,0x0882,0x18E3,0x0821,0x2945,0x6B4D,0x2965,0x39E7,0x3186,0x10A3,0x1904,0x10A2,0x3186,0x4228,0x18C3,0x4A69,0x0821,0x1082,0x0862,0x4A49,0x10A3,0x18E3,0x10A3,0x10A3,0x10A3,0x1904,0x10A2,0x4208,0x0861,0x2104,0x0821,
0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x10A2,0x0821,0x0821,0x0821,0x0861,0x10A3,0x0882,0x0882,0x0882,0x2145,0x0882,0x0862,0x10C3,0x10C3,0x0821,0xE6FB,0x2104,0x0862,0x10C3,0x2124,0x2966,0x18E3,0x0021,0x18E3,0x0861,0x31C7,0x2986,0x0861,0x2104,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,
0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0862,0x0882,0x0882,0x0882,0x0882,0x10A3,0x0862,0x10A3,0x2124,0x10A3,0x0882,0x9CD2,0xFFFF,0x8C71,0x0021,0x0882,0x10A2,0x1082,0x4A49,0x10A3,0x39E7,0x18E3,0x3A07,0x3186,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0861,0x0882,0x10A2,0x10A3,0x0882,0x10A2,0x4A8A,0x18E3,0x18E4,0x10A3,
0x1082,0x632C,0xF79D,0xFFDE,0xFFBF,0x0862,0x1904,0x0882,0x1082,0x18E4,0x1904,0x1904,0x0841,0x0021,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0862,0x10A2,0x08A2,0x0882,0x10A2,0x2104,0x2104,0x0882,0x0862,0x10C3,0x10A3,0x4A48,0xFFDE,0xF79D,0xF79D,0xF79D,0xFFFE,0xFFFF,0x5AEB,0x1082,0x10A3,0x1082,0x2124,0x0821,0x0821,0x0821,
0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0862,0x10A2,0x0882,0x0882,0x39E7,0x0882,0x2965,0x39C7,0x0861,0x0882,0x10C3,0x31C6,0xF79C,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xFFFF,0xFFFF,0xE73C,0xE71B,0xC638,0x83EF,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,
0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0041,0x10A2,0x10A3,0x10C3,0x18E4,0x1082,0x2145,0x18C3,0x4229,0x10A3,0x1082,0x4A48,0xEF5C,0xF77C,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF7BD,0xF79D,0xBDD6,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0020,0x10C3,0x10A3,0x10A3,0x0882,0x10A2,0x2104,0x18E4,0x0862,0x0882,
0x0862,0x738D,0xEF5B,0xF79C,0xFFFF,0x0821,0x31A6,0xFFFF,0xF7BD,0xF79D,0xF79D,0xFFBD,0xF7BD,0xB5B6,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0861,0x10A3,0x0882,0x10A3,0x0021,0x39E7,0x5AEB,0x2125,0x1082,0x10A2,0x0021,0xA514,0xFFBE,0xF79D,0xA514,0xCE59,0x0861,0x39C7,0xF79D,0xF79D,0xF79D,0xEF7C,0xFFFF,0x0020,0x2124,0x0821,
0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x2125,0x0862,0x1082,0x1082,0xA514,0xFFFF,0xFFFF,0xCE59,0x0821,0x10A3,0x0021,0xCE79,0xFFDE,0xF7BD,0xFFDE,0xF79D,0xFFFF,0x4A49,0xDEDB,0xFFFF,0xF7BD,0xFFFF,0x2945,0x8430,0x632C,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,
0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x2965,0x0882,0xAD75,0xF77D,0xFFBD,0xE71B,0xFFDE,0xFFDE,0x10A3,0x0841,0xF79D,0xF7BD,0xF79D,0xF79D,0xEED9,0xFFBD,0xF79D,0xFFFF,0x9CF3,0xF7DD,0xEF5C,0xF77D,0xAD54,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0041,0xFFFF,0xE71B,0xEF3B,0xE71B,0xEF7C,0xFFFF,0x10A3,
0x5AEB,0xC5F6,0xFFBD,0xF7BD,0xF79D,0xAA88,0xFF7D,0xF7FC,0xF79D,0xFFBD,0xF79C,0xF77D,0xF79D,0xBDB6,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0881,0xFFFF,0xEF3B,0xDED9,0xF7BD,0xF79D,0xFFFF,0x0821,0xE71C,0xDEB9,0xF79D,0xF79D,0xF79D,0x18E2,0x8451,0x5ACB,0xF79D,0xF79D,0xFFDE,0xF7BD,0xFFFF,0x1082,0x0821,0x0821,
0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0841,0x0841,0xFFFE,0xEF5C,0xE71A,0xF7BD,0xFFDE,0x7BCF,0x8C51,0xFFDE,0xDED9,0xF79D,0xF79D,0xF79D,0xFFFF,0xBB6C,0xB3AC,0x9228,0xFFFF,0xF79C,0xE6FB,0x9AA9,0xA2E9,0x7BAE,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x4A06,0x41E6,0x0821,0x0821,0x0821,0x0821,
0x62C9,0x5164,0x836A,0x7308,0x5A07,0x0862,0x0861,0x0821,0x52AA,0xFFDE,0xF7BD,0xFFDD,0xF79D,0xFFFF,0x0821,0xFFFF,0xFFDE,0xE71A,0xF79D,0xF7BD,0xF79D,0xF79C,0xFFBD,0xFFFF,0xC40D,0xFFFF,0xFF9D,0xEF9B,0xDF3B,0xFFFF,0xE75D,0x31A5,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x3144,0x8389,0x72E7,0x4985,0xAC8D,0xB4CD,0x4145,0x7328,0x7328,0x4105,0xBD50,0x6145,0xDE4F,0x7266,0x9C4F,0x0021,0x4A6A,0x4228,0xE73C,0xFFBD,0xEF5C,0xE6FA,0xF79D,0xFFFF,0x0821,0xF79D,
0xFFBE,0xCE58,0xF79D,0xF79D,0xF79D,0xFF7E,0xF7DD,0xF7BD,0xFFBD,0xF79E,0xF79C,0xFF9E,0xF7FD,0xCE17,0xFFFF,0x736E,0x0821,0x0821,0x4A26,0x93EA,0x7309,0x72E8,0xA48D,0xDE31,0xB48D,0x936A,0xBD0F,0xDE11,0x69A6,0xA46C,0x7AA9,0xD611,0x7208,0xDE11,0xAC8D,0xA3ED,0x0821,0x0862,0xF79D,0xF79D,0xF79D,0xEF7C,0xF79D,0xF79D,0xFFDE,0xBD94,0xC616,0xF79D,0xF79D,0xFFDE,0xFFDE,0xF79D,0xF79D,0xF7BD,0xF79D,0xF7BD,0xF7BD,0xF79D,0xF79D,0xF7BD,0xF7BD,0xFFDE,0xFFBE,0x8C71,
0x31A6,0x4924,0xBD6F,0xBCAE,0x7AA9,0xBD0E,0xD5B0,0xDE11,0xB4AD,0x936A,0xC54F,0xD5F1,0x6145,0xA48D,0x69A5,0xDE11,0x6165,0xD5F1,0xE6B3,0x5ACB,0x10A2,0x0821,0xF79D,0xF79C,0xF79D,0xD6B9,0xFFDE,0xF7BD,0xFFFE,0x9C6F,0xF79C,0xFFBD,0xF79D,0xF79D,0xEF3B,0xFFBE,0xFFBD,0xF79D,0xFFBD,0xF7BD,0xF79D,0xF79D,0xF79D,0xF7BD,0xF79D,0xF79D,0xFFFF,0x73AE,0xE630,0x69C7,0x93AA,0xB4CD,0x69C6,0xDE12,0xD5CF,0xD5AF,0xBCEE,0x8B2A,0xC52E,0xCD90,0x6145,0x8BCC,0xB40D,0xB4AD,
0xAC6D,0x9BEB,0xBD0E,0x0040,0x1082,0x0020,0xF79D,0xF7BD,0xF79D,0xF77D,0xF7BD,0xF79D,0xFFFE,0x942E,0xFFFF,0xF79D,0xF79D,0xF79D,0xFFBD,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF7BD,0xF7BD,0xF79D,0xF7BD,0xF7BD,0xE71B,0x62EB,0x7A89,0xD610,0x69A6,0xCD8F,0x7A68,0xB48C,0xBCCE,0xDDF1,0xBCCD,0x82A9,0xAC4E,0xB46D,0x9B6A,0x8AC9,0xAC8D,0xBCEF,0xB4CE,0xD5D1,0x92C9,0x1082,0x0020,0xCE99,0xF7BD,0xF79D,0xF7BD,0xFFBD,0xF79D,0xFFBD,0xFFFE,0xAD32,0xFFDE,0xF79D,
0xF79D,0xF79D,0xF79D,0xF7BD,0xF79D,0xF7BD,0xF7BD,0xF79D,0xFFBD,0xCE58,0xFFFF,0xF79C,0xF79D,0xFFBD,0xF79D,0x5AEB,0x8267,0xC52F,0x7A68,0xAC2C,0xAC4D,0x9BAA,0xB46D,0xCD90,0xC50E,0x7A28,0x93AB,0x8B0A,0xAC6D,0xC530,0xBD0F,0x6145,0xC50F,0x8AE9,0x838C,0x0883,0x0821,0xFFFF,0xF79D,0xF79D,0xF79D,0xF7BD,0xF79D,0xF79D,0xFFDD,0xD678,0xFFDD,0xF79D,0xF79D,0xF7BD,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xFFBE,0xC617,0xAD74,0xFFBD,0xFFBD,0xF79D,0xEF5C,0x31A6,
0x71E8,0xBCEE,0xAC2B,0x7A68,0xCD70,0x8B29,0xBCEE,0xCD4F,0xC50E,0x69A6,0xC52F,0x6A07,0x8BAB,0xB4AD,0xD5D0,0x8268,0xD630,0x71A6,0x10C3,0x18A2,0x31A7,0xFFFF,0xF79D,0xF7BD,0xF79D,0xF79D,0xF79D,0xF79D,0xF7BD,0xF77D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF7BD,0xF79D,0xFFFE,0xFFFE,0xF77C,0xF79D,0xF79D,0xBDD6,0x0821,0xAC4D,0xC50E,0xD5D1,0x69A6,0xCDAF,0x6966,0xBD2D,0xD677,0xD638,0x93AC,0xBCAE,0x6A67,0x9309,0xEEF4,0x69C7,0xC50F,
0x7186,0x2966,0x0883,0x0021,0xFFFF,0xF79D,0xF7BD,0xF79D,0xF7BD,0xF79D,0xF79D,0xF79D,0xEF3B,0xF77D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF7BD,0xF7BD,0xF79D,0xF79D,0xFFDE,0xB595,0x8430,0x0821,0xC50F,0xB46D,0xBD0E,0x7A68,0xD5D0,0x7268,0xFFFE,0xF7BD,0xFF9F,0xF7FE,0x69C4,0x7269,0xCD91,0x71E6,0xDE52,0x9BCB,0x938C,0x0821,0x08A2,0xA534,0xF77D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xEF5C,0xF79D,0xF79D,0xF79D,
0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF7BD,0xF79D,0xF79D,0xFFFF,0xFFFE,0xFFBE,0xFFDE,0xFFFF,0xBDD6,0x0821,0x0821,0xBD0E,0xA3EA,0xC54F,0x82AA,0x8B49,0xF7FF,0xE75C,0xFFDF,0xE6AD,0xDE2E,0xC658,0x92C9,0xAC8C,0x8269,0xA40C,0xDE11,0x3186,0x10C4,0x10A2,0xFFFF,0xF79D,0xF79D,0xF79D,0xF7BD,0xF79D,0xF79D,0xF79D,0xF79D,0xEF5C,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xFFFF,0xFFBE,0xCE38,0xBDB5,0xCE37,0xDED9,0xE73B,0x632C,0x0821,0x0821,0x0821,
0xBCED,0x7A47,0xB4AE,0xC54F,0xFFDE,0xCDF4,0xEE90,0xB594,0xFF9E,0xFFDE,0x8AA8,0xB48D,0xD5D1,0xA46D,0xCDB0,0x71C6,0x1061,0x0883,0x0821,0xFFBD,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xD699,0xF7BD,0xF79D,0xF79D,0xF7BD,0xF79D,0xF79D,0xF79D,0xFFBE,0xFFFF,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF7BD,0xFFBD,0x6B4C,0x0821,0x0821,0xBD2F,0x69C7,0xD5B0,0xC54F,0xFFFF,0xFF9E,0xF7DF,0xAD13,0xA4F3,0xFFFF,0xBCED,0xD590,0x6185,0xA3CC,0x8B29,0x9C0E,
0x0882,0x08A2,0x8410,0xF79C,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF77C,0xFFBD,0xF79D,0xF79D,0xF79D,0xF79D,0xFFBD,0xFFBD,0xF79D,0xF79D,0xF7BD,0xF79C,0xF79D,0xF79D,0xF79D,0xF79D,0xEF3C,0x2124,0x0821,0x0821,0xB4EE,0x7A07,0xCD4D,0xC54F,0xF7BE,0xF79D,0xF75D,0xBDB7,0xE71B,0xC5F1,0xA46B,0xBD0F,0x8A89,0xCDD0,0x79E6,0x2124,0x0862,0x0821,0xFFFF,0xF7BD,0xFFBD,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xFFBD,0xD699,0xFFFE,0xF79D,
0xF79D,0xF7BD,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF7BD,0xF79D,0xE71B,0x52AA,0x0821,0x0821,0x0821,0xA3CB,0xB48D,0x8B09,0xA3EB,0xC52C,0xFFDF,0xFFFF,0xDE97,0xC637,0x9B6A,0xBD2F,0x9B8B,0xB48D,0x8A88,0x08A3,0x10A3,0x0821,0xFFFF,0xF79D,0xF7BD,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xFFFF,0xFFFF,0xF79D,0xF79D,0xF7BD,0xF79D,0xF7BD,0xF79D,0xF79D,0xF7BD,0xF77A,0xF799,0xF77A,0xB5B3,0x0821,0x0821,0x0821,0x0821,
0x7A27,0xCD6F,0x7A48,0xBD2F,0xBD90,0x69A5,0xFFFF,0xFFFF,0x5142,0xC530,0x6125,0xCDD0,0xBD0E,0x83AE,0x0021,0x0882,0xAD75,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF7BD,0xF79D,0xFFBD,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF738,0xFFBE,0xF79D,0xF79D,0xF79D,0xF7BD,0xF79D,0xF7BD,0xF77D,0xF79A,0xF79B,0xF799,0xD6B7,0x2925,0x0821,0x0821,0x0821,0x71C6,0xC54E,0x6185,0xC590,0xBCEE,0x9369,0xA42B,0x838C,0xBC6E,0xB46C,0xA42C,0xB42D,0xB48E,0x0040,0x10A2,0x10A3,
0xFFFF,0xF7BD,0xF7BD,0xF79D,0xF79D,0xF79D,0xF79D,0xF7BD,0xF79D,0xF79D,0xF79D,0xF79D,0xFFBD,0xF7BD,0xFFBE,0xF7BE,0xF758,0xF779,0xF79D,0xF79D,0xF79D,0xF77B,0xF77A,0xFF99,0xF79B,0xF799,0xDED8,0x7BCE,0x0821,0x0821,0x0821,0x0821,0x7227,0x93AA,0x5986,0xC50E,0x69A6,0xE693,0xC58F,0xCDB0,0xA40C,0x8B0A,0xA40B,0xA3EC,0x9B6B,0x10A3,0x10A2,0x2104,0xFFBD,0xF79D,0xF7BD,0xF79D,0xF7BD,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF77D,0xFFFE,0x0820,0x0821,0x0821,0xCD8F,
0xCD8E,0x48E3,0xBD73,0xFFDC,0xFFFE,0xEF7A,0xF77A,0xF77B,0xF77A,0xF77B,0xB594,0x0821,0x0821,0x0821,0x0821,0x0821,0x7A89,0xBCEE,0x7AA8,0xAC2D,0x61A6,0xBD4E,0xA42C,0xBC8E,0xD611,0x69A6,0xDE12,0x6985,0x5A8A,0x0882,0x0020,0xFFFF,0xFFBD,0xF79D,0xF79D,0xF79D,0xF79D,0xF7BD,0xF79D,0xF79D,0xF79D,0xEF7D,0xFFFF,0x18E3,0x1082,0x08A3,0x2903,0xB4CC,0xC530,0x69A6,0x9C2D,0x69A5,0x61C5,0x9CF1,0xB5B3,0xB5B3,0xB593,0xB5B5,0x52A9,0x0821,0x0821,0x0821,0x0821,0x0821,
0x82CA,0xC4EE,0x8AE9,0x834A,0xA40B,0xA46E,0x5924,0xCDF1,0x5924,0xDDF1,0x7AC9,0x934A,0x0821,0x10A3,0x62CB,0xFFFF,0xF79D,0xF79D,0xF7BD,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xAD75,0x0821,0x10A3,0x0862,0x0062,0x5A28,0xCD4E,0x932A,0x834A,0x8B4A,0xB46C,0x6AC8,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x8B8B,0xCD2E,0x3943,0xCCF0,0x0042,0xA34A,0xB48D,0x6185,0xBCCE,0xC570,0x7B8D,0x0041,0x10A2,0x9CF3,0xF79D,0xF79D,
0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xFFFF,0x0821,0x0882,0x0882,0x0882,0x1082,0x0021,0x8A48,0xDDD0,0x6166,0xC52E,0xB48E,0x82E9,0x4965,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0xA3EC,0x0022,0x0882,0x0020,0x69C7,0xCD90,0xD5F1,0xE612,0xB4AD,0xAC2D,0x0821,0x08A2,0x08A3,0xFFFF,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xEF5D,0x0821,0x10A2,0x0882,0x0882,0x0882,0x08A3,0x1882,0x9B6A,0xBCEE,
0x69E6,0xD5F1,0x9B8C,0x9BAB,0x6287,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0xC4AE,0x0861,0x5A8B,0x0041,0xD5F2,0xBCEE,0x8AE9,0x9BCB,0xCD70,0x7A07,0x0883,0x08A2,0x0821,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF7BD,0xF79D,0xF79D,0xF79D,0x0821,0x10A2,0x0882,0x08A2,0x10A3,0x10A2,0x0001,0x49A7,0xAC2C,0x936B,0xAC0C,0x8BEA,0xB48D,0xBD0E,0x7328,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,
0x10A3,0x4A29,0x0020,0x30C2,0xD5F1,0x50C5,0xD611,0x8B6B,0xAB8C,0x0021,0x10C3,0x0821,0xFFFF,0xF79D,0xF77C,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xFFFF,0x0821,0x0882,0x0882,0x0882,0x10C3,0x0821,0xEC6E,0xCBCD,0x7206,0xB52E,0x5925,0xD5B0,0x6A68,0x9B8B,0xBCCE,0xA44C,0x49E6,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0862,0x4A69,0x0821,0xF692,0x6986,0xD590,0xB4AD,0x7A26,0x31C7,0x0882,0x0821,0xCE59,0xF79D,0xF7BD,0xFFBD,0xF79D,
0xF79D,0xF79D,0xF7BD,0xFFFF,0x0821,0x10A2,0x0882,0x0882,0x10A2,0x0821,0xFC6E,0xB32C,0xC38D,0x7227,0xB42D,0x82A9,0x93CB,0xCD50,0xBCEE,0xB4AD,0xB48C,0x5A47,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0021,0x1081,0x62A8,0xB44D,0x8B29,0xA3AB,0xDE52,0x83CF,0x0020,0x0882,0x2104,0xFFDE,0xF79C,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0x4A49,0x10A3,0x10A3,0x10A2,0x10A2,0x0882,0xCBCD,0x9AEA,0xD36C,0x9BAD,0x8309,0xB4CD,0x8AE9,
0x838A,0xB46D,0xCDB0,0xB48D,0x9B8B,0x5A67,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0041,0x41C6,0xEE91,0x58E3,0xB48E,0xB4AD,0x9AC9,0x1083,0x08A2,0x10C3,0xFFFF,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xFFFF,0x0882,0x0882,0x0882,0x0882,0x10A2,0x0821,0xE38D,0x9B2C,0xCBCC,0x7AEA,0xCD2F,0xBD2E,0xDE10,0x59A6,0xABEC,0xC54F,0xB4CD,0xBCCE,0x6AC9,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,
0x18E3,0xCD2F,0x7207,0xBCAD,0xCD8F,0x79C7,0x4A48,0x08A3,0x1083,0x0821,0xF77D,0xFFBD,0xFFDE,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xBDD7,0x0882,0x0862,0x10A2,0x08A2,0x0062,0x82AA,0x8B2A,0xDBCD,0xD3CD,0x6A08,0xCD90,0xC52F,0xDE91,0xAC8D,0xC54E,0xCD4F,0xE611,0xCD8F,0x6AC8,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x528A,0xBCCD,0x7248,0xB48D,0x71E7,0x838C,0x0821,0x0881,0x1082,0x0020,0xFFBE,0xDEDA,0xDEDA,0xF79D,0xF79D,0xF79D,
0xF79C,0xFFDE,0x0020,0x10A2,0x0882,0x0882,0x08A1,0x0001,0xFC6D,0xAB6B,0xB36C,0x82CA,0x61C7,0xB52D,0xC54F,0xA46C,0xFF13,0xC510,0x69E6,0x69A6,0x6166,0x3944,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0882,0xC52D,0xAC8E,0xCD6F,0x944E,0x0842,0x08A3,0x0882,0x0821,0xF7BE,0xF7BD,0xDED9,0xFFDE,0xFFBD,0xF79D,0xF79D,0xFFFF,0x31A6,0x0862,0x10A2,0x0041,0x0882,0x0001,0xDC0D,0xCBAC,0xD3CC,0xD3AD,0xCBCC,0x7228,0xC52F,0xB4EE,0x7B0A,
0xC52F,0xE671,0xBCCE,0xBCEC,0xBD0E,0x836A,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x2904,0xC52F,0xBD0F,0x69E6,0x8C4A,0x0001,0x0882,0x10A3,0x0041,0xFFFF,0xDEB9,0xE6FA,0xFFFE,0xFFBD,0xF79D,0xF79D,0xFFFF,0x0821,0x0882,0x0821,0xCE79,0x0821,0x0040,0xEC0D,0xC3AC,0xEBCD,0x8AEB,0xCBCC,0x8288,0xB4EE,0xAC2D,0xB4EE,0xC52F,0xC50E,0xAC4C,0x8289,0x7206,0x4124,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,
0x4965,0xA3CC,0xB4CD,0x9269,0x7B6A,0x0042,0x1083,0x0882,0x5ACB,0xFFFF,0xE71B,0xFFBE,0xDEB9,0xF79D,0xF79D,0xF79D,0xCE59,0x0021,0x10A3,0xFFFF,0xEF5C,0x18E3,0x6A48,0xC38C,0xCBAC,0xCBAC,0x8ACA,0xC3AC,0x82A7,0xB4AD,0x9BCC,0xDE51,0xC54F,0x7267,0x7207,0x8B09,0xB4AE,0x7B49,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0xEE53,0xB4EE,0x8287,0x73EB,0x0861,0x08A2,0x1083,0x0821,0xE6FB,0xD658,0xF79D,0xFFFF,0xD6B9,0xF79D,0xF79D,0xF79D,
0x0821,0x2966,0xFFFF,0xA534,0x0821,0x0882,0xE3EE,0xCB8C,0xC38C,0x930B,0xD3CD,0x9B2B,0x934A,0xBCCE,0x9B8A,0xCD4F,0xCDD0,0xAC8C,0xCD6F,0xB48D,0x9B8B,0x40E3,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0xBCAD,0x6985,0x7B0C,0x7BA9,0x0821,0x1082,0x0882,0x0020,0xDEDA,0xFFFE,0xFFDE,0xD678,0xCE58,0xF79D,0xFFBD,0xFFBE,0xB5B6,0xFFDE,0xFFFF,0x0862,0x10A2,0x0882,0xEC4E,0xCB8C,0xCBCD,0x8AEA,0xE3CC,0x82A8,0x9B8B,0xB4EE,0x8B2A,0xDDF0,
0xC54F,0xC4CE,0x5146,0x7AA9,0x938A,0xA42C,0x41E6,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0xC54F,0x7A27,0x738B,0x7389,0xAD55,0x0821,0x0821,0x0821,0xFFFF,0xF79D,0xF79D,0xFFDE,0xFFDE,0xDEB9,0xE71A,0xEF5C,0xF79C,0xFFFF,0x18C3,0x08A3,0x10A3,0x10C2,0xD3EC,0xC3AC,0xCB6C,0x9B4B,0xD3EC,0xDBEE,0xA3CC,0xBCCE,0x8309,0xCDF3,0x7269,0x7A88,0xC56E,0xE630,0xD52E,0x6287,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,
0xDE72,0x6B4A,0x738A,0x7BAA,0xFFFF,0xF79D,0xF79D,0xF79D,0xF79D,0xFFBD,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xFFDE,0xD699,0x0821,0x0020,0x0882,0x10C3,0x10A3,0xCBED,0xCBEC,0xCBCC,0xCBCD,0xB38B,0xD3AC,0xB42B,0xA44D,0x9B8B,0xFF9D,0xFFFF,0xA46B,0x0042,0x08C2,0x10A3,0x1082,0x0821,0xA534,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x9BCB,0x73CA,0x7369,0x7389,0xFFFF,0xF79C,0xFFBD,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,
0xF7BD,0xDEDA,0xC638,0x9491,0x4228,0x0041,0xCC0E,0xBB8C,0xD3AC,0xCB8C,0xB3AD,0xBB6B,0x9BAB,0xAC4C,0xB46E,0xEF7D,0xF79D,0x0821,0x10A3,0x1063,0x08A2,0x0021,0xBDF7,0xA534,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x6987,0x6B48,0x7369,0x7BAA,0xFFFF,0xF7BD,0xF79D,0xF7BD,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xFFBD,0xF7BD,0xF77C,0xF77D,0xF79D,0xF7BD,0xFFDE,0xFFFF,0xF7BD,0xFFFF,0xBBAD,0xCBAD,0xA32C,0xA40E,0x9B2A,0xBCAF,0xAC4B,0xEF7B,
0xAD73,0x0862,0x10A3,0x0882,0x0882,0x39E7,0xFFFF,0xB5D6,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x7AEA,0x6B48,0x6B49,0x6328,0xF7BD,0xF7BD,0xF7BD,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xFFBD,0xF77D,0xC617,0x0821,0x0841,0x0020,0x0020,0x0821,0xDBAB,0xCB8B,0xC3CC,0x9AE8,0xFFFF,0xBDD5,0x82AA,0xC4ED,0xB513,0xFFFE,0x2965,0x1082,0x0882,0x10A3,0x0821,0xF79D,0xD69A,0x0021,0x0821,0x0821,0x2124,0xAD75,0xA513,0x2945,0x0821,0x0821,
0x734B,0x6B49,0x6B49,0x6328,0xF7BD,0xFFBD,0xF79D,0xF79D,0xF79D,0xF7BD,0xF79D,0xF79D,0xF79D,0xFFBD,0xF79D,0xFFDE,0xF7BE,0xFFFF,0x9CF3,0x10A3,0x0882,0x10A2,0xE42D,0xCBAD,0xC3CC,0x938C,0xFFFF,0xF7BD,0x9B6E,0x8349,0xFFFF,0xFFBD,0x73AE,0x0021,0x0882,0x0821,0xE71C,0xFFFF,0x0821,0x0021,0x2965,0x632C,0xEF5C,0xBDD6,0x0821,0x0821,0x0821,0x0821,0x6BA9,0x6B69,0x6B68,0x6307,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xFFBD,0xD699,
0xCE79,0xFFFE,0xF79D,0x0021,0x18C3,0x10A2,0xDBEE,0xCBAC,0xDBAD,0x9C6F,0xFFFF,0xFF9D,0xF7BD,0xFFFF,0xF77D,0xF79D,0xFFBE,0xB596,0x73AE,0xFFDF,0xF79D,0x4207,0x0821,0x2103,0xBDD6,0xB595,0x8430,0x2965,0x0821,0x0821,0x0821,0x0821,0x6B48,0x6B48,0x7369,0x7389,0x0020,0x31A6,0xF79E,0xF77D,0xFFBD,0xF79D,0xF79D,0xF7BD,0xF7BD,0xFFDD,0xEF7C,0xF79D,0x0821,0x10A3,0x0821,0xD699,0xFFFF,0x10C3,0xCBAC,0xCB8C,0xC3AC,0xF7BE,0xFF7D,0xE73B,0xF79D,0xF79D,0xF79D,0xF79D,
0xF79D,0xF79D,0xCE58,0xFFFE,0xF79D,0xF7BD,0xEF7D,0xBDD6,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x7369,0x6B49,0x7369,0x7369,0x4A46,0x0822,0x0821,0xEF7D,0xFFFF,0xFFFF,0xF79D,0xF7BD,0xF79D,0xE71B,0xFFDE,0xBDF7,0xFFFF,0x0821,0x10A3,0x9CF3,0xEF7D,0xFFFF,0xCBCC,0xCBCD,0xCBAC,0xFFFF,0xFFDE,0xC5F6,0xF79D,0xF77D,0xF79D,0xF79D,0xF79D,0xF79D,0xFFFE,0xCE58,0xFFDE,0xCE58,0xFFFF,0x2103,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,0x0821,
0x6B48,0x6B49,0x7369,0x6B69,0x73A7,0x6B4A,0x0821,0x0821,0x0821,0x4208,0xFFFF,0xEF7C,0xF77C,0x6B6D,0x0821,0x0821,0xFFFF,0xFFFF,0x0821,0x0882,0x0821,0x0821,0xCB8C,0xCBAD,0xDBCD,0xF7BE,0xE77B,0xEF3C,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xF79D,0xFFDE,0xFFBE,0xEF7C,0xFFDD,0xE71B,0xEF5C,0x7BCE,0x4A69,0x0821,0x2965,0x2945,0x0821,0x0821,0x0821,0x6B69,0x6B69,0x6B49,0x7369,0x7389,0x7389,0x6B49,0x6309,0x0001,0x08A2,0x10A3,0x18E2,0x0861,0x0882,0x10A2,0x0882,
0x1082,0x0821,0xC638,0x0841,0x0842,0xB38C,0xCBCC,0xDB8C,0x83EE,0xEF7C,0xFFFF,0xF79C,0xF79C,0xF7BD,0xF7BD,0xF79D,0xF79D,0xFFDE,0xFFBD,0xFFDD,0xEF5B,0xF77C,0xE71B,0xC5F7,0x528A,0xB595,0x4A69,0xCE38,0x9491,0x0821,0x0821,0x0821,0x6B49,0x6B49,0x6B48,0x6B48,0x7389,0x736A,0x6B69,0x6B48,0x8C6B,0x4A47,0x0861,0x2966,0x0883,0x10A2,0x10A2,0x0882,0x10A3,0x10A3,0x0821,0x1083,0x0060,0xEC2F,0xCBED,0xC3CE,0x6389,0x5B26,0x62E7,0xB5B5,0xFFBE,0xF77C,0xF7BD,0xF7BD,
0xFFBE,0xCE37,0xF7BD,0xCE37,0xFFDE,0xFFDE,0xD699,0xFFFF,0x0821,0x630C,0x5ACB,0x2945,0x0821,0x0821,0x0821,0x0821,0x6B48,0x6B69,0x6B49,0x7369,0x5287,0x6B28,0x7369,0x6B69,0x7369,0x6B28,0x4A67,0x10C3,0x0021,0x0021,0x0001,0x0001,0x08A2,0x0882,0x0882,0x0821,0xC38D,0xCBAC,0xCB4B,0x63EB,0x7B89,0x7B8A,0x73C9,0x2943,0x8430,0xFFFF,0xFFFF,0xF79D,0xF79D,0xFFBD,0xDEDA,0xFFBD,0xF79D,0xFFDE,0xFFFF,0xE71B,0xFFDE,0x8C50,0x3165,0x0821,0x0821,0x0821,0x0821,0x0821,
0x844C,0x6B48,0x7349,0x7369,0x6B49,0x6B69,0x7369,0x6B49,0x6B69,0x6B69,0x6B68,0x7389,0x736A,0x7368,0x842A,0x5288,0x840A,0x2104,0x08A2,0xE3EC,0xD3EC,0xDBCC,0x738A,0x6B28,0x62A7,0x7389,0x840B,0x0021,0x10A3,0x0882,0x10A2,0x0840,0x10A2,0x840F,0xDEDB,0xDEFB,0x9492,0x18C3,0x0882,0x10A3,0x1082,0x39E7,0x4A69,0x0821,0x0821,0x0821,0x0821,0x0821};


// SPI転送モード
SPISettings  spisettings(1000000, MSBFIRST, SPI_MODE3); // SPI通信の設定を作成する
const int SPI_PORT = 0;
const int RXDC_PIN = 16;
const int CS_PIN = 17;
const int SCK_PIN = 18;
const int MOSI_PIN = 19;
const int RESET_PIN = 0;
const int DEBUG_PIN = 0;
ST7735 *pST7735;
ST7735 st7735;

HW spiHW(SPI_PORT, RXDC_PIN, CS_PIN, SCK_PIN, MOSI_PIN, RESET_PIN, DEBUG_PIN);

void setup() {
    // These functions are defined in Raspberry PI PICO SDK
    spi_init(spiHW.portSPI, 10*1000*1000);	
  	gpio_set_function(spiHW._dc, GPIO_FUNC_SPI);
    gpio_set_function(spiHW._sck,GPIO_FUNC_SPI);
    gpio_set_function(spiHW._tx, GPIO_FUNC_SPI);
    gpio_put(spiHW._cs,1);

    spiHW.init();
    st7735.SetSPIHW(&spiHW);
    st7735.doInit();
}


void loop() {
    // 登録済みのフォントの一覧を求める。登録済みフォントはST7735_TFT.cppの、doInitで登録してある。変更時は、
    // どこかからフォントを持ってきて、include\fontに突っ込んで、doInitで登録する。
      char buf[256];
    	st7735.getFonts(buf,sizeof(buf));
      int  count;
      char fonts[32][MAX_TOKEN_LENGTH];
      splitString(buf,fonts,&count);



    st7735.fillScreen(ST7735Color.BLACK);
    st7735.drawTextKanji(0,0,"日本語表示ライブラリ",ST7735Color.WHITE, ST7735Color.BLACK, 1);
    st7735.drawTextKanji(0,20,"日本語とスクロール",ST7735Color.WHITE, ST7735Color.BLACK, 1);

    delay(1000); 
    
    {
      st7735.fillScreen(ST7735Color.BLACK);
      st7735.drawTextKanji(0,0,"祇園精舎の鐘の聲、諸行無常の響あり。沙羅双樹の花の色、盛者必衰の理をあらはす。驕れる人も久しからず、唯春の夜の夢の如し。猛き者もつひには滅びぬ、偏に風の前の塵に同じ。",ST7735Color.WHITE, ST7735Color.BLACK, 1);
      delay(1000); 
	    for (int i = 0; i < st7735.getHeight(); i++) {
		    st7735.setScrollDefinition(0, 0, true);
		    st7735.verticalScroll(i);
		    sleep_ms(10);
	    }
	    st7735.verticalScroll(0);
      delay(1000); 

      st7735.st7735Init.setRotation(ST7735_ROTATION::DEGREE_90);
	    st7735.fillScreen(ST7735Color.WHITE);
      st7735.drawTextKanji(0,0,"春はあけぼの。やうやう白くなりゆく山ぎは少し明りて、紫だちたる雲の細くたなびきたる。夏は夜。月の頃はさらなり。闇もなほ。螢の多く飛び違ひたる。また、ただ一つ二つなど、ほのかにうち光りて行くもをかし。雨など降るもをかし。",ST7735Color.BLACK, ST7735Color.WHITE, 1);
      delay(1000); 
	    for (int i = 0; i < st7735.getHeight(); i++) {
		    st7735.setScrollDefinition(0, 0, false);
		    st7735.verticalScroll(i);
		    sleep_ms(10);
	    }
	    st7735.verticalScroll(0);
      delay(1000); 
      st7735.st7735Init.setRotation(ST7735_ROTATION::NORMAL);
    }
    {
      st7735.fillScreen(ST7735Color.BLACK);
      st7735.drawTextKanji(0,0,"日本語表示ライブラリ",ST7735Color.WHITE, ST7735Color.BLACK, 1);
      st7735.drawTextKanji(0,20,"英文フォント",ST7735Color.WHITE, ST7735Color.BLACK, 1);    
      st7735.drawTextKanji(0,40,"固定領域スクロール",ST7735Color.WHITE, ST7735Color.BLACK, 1);    
      delay(1000); 
      st7735.fillScreen(ST7735Color.BLACK);
      st7735.setFont(fonts[0]);
      st7735.fillRectangle(0, 0, st7735.getWidth(), 15, ST7735Color.WHITE);
      st7735.fillRectangle(0, st7735.getHeight()-15, st7735.getWidth(), 15, ST7735Color.WHITE);
	    st7735.drawText(0, 13, "FIXED AREA", ST7735Color.BLACK, ST7735Color.WHITE, 1);
	    st7735.drawText(0, st7735.getHeight() - 3, "FIXED AREA", ST7735Color.BLACK, ST7735Color.WHITE, 1);


      st7735.setFont(fonts[3]);
	    const char* txt = "The quick brown fox jumps over the lazy dog";
    	st7735.drawText(0, 30, txt, ST7735Color.WHITE, ST7735Color.BLACK, 1);
  	  st7735.setScrollDefinition(15, 15, true);

		  for (int i = 15; i < st7735.getHeight() - 15; i++) {
			  st7735.verticalScroll(i);
			  sleep_ms(10);
		  }
		  st7735.verticalScroll(0);
      st7735.setScrollDefinition(0, 0, true);      
    	st7735.SetRotation(ST7735_ROTATION::NORMAL);            //　スクロール領域指定後は、これがないとなぜか画面の色が変になる
      delay(1000);   
    }



    {
      st7735.fillScreen(ST7735Color.WHITE);
      st7735.drawTextKanji(0,0,"ﾋﾞｯﾄﾏｯﾌﾟ(透過なし)",ST7735Color.BLACK, ST7735Color.WHITE, 1);
      for (int i=0;i<10;i++) {
    	  st7735.bmpDraw(rand() % (st7735.getWidth() - 50), rand() % (st7735.getHeight() - 120)+24, 48, 77, (uint16_t*)sharaku, 0);
      }
      delay(1000);   
    }

    {
      st7735.bmpUseTransColor(0b0000100000100001);	// 透過あり
      st7735.drawTextKanji(0,0,"ﾋﾞｯﾄﾏｯﾌﾟ(透過あり)",ST7735Color.BLACK, ST7735Color.WHITE, 1);
      for (int i=0;i<4;i++) st7735.fillRect(i*32,16,i*32+16,st7735.getHeight(),ST7735Color.RED);
      for (int i=0;i<4;i++) st7735.fillRect(i*32+16,16,i*32+32,st7735.getHeight(),ST7735Color.WHITE);
      for (int i=0;i<10;i++) {
    		st7735.bmpDraw(rand() % (st7735.getWidth() - 50), rand() % (st7735.getHeight() - 120)+24, 48, 77, (uint16_t*)sharaku, 0);
      }
      st7735.bmpUnuseTransColor();
      delay(1000); 
    }

    {
      st7735.fillScreen(ST7735Color.BLACK);
      st7735.drawTextKanji(0,0,"矩形",ST7735Color.WHITE, ST7735Color.BLACK, 1);

      for (int i=0;i<10;i++) {
        int c = rand() % 0xFFFF;
        st7735.drawRect(i*5 , 16+i*5, st7735.getWidth()-i*5,st7735.getHeight()-i*5,c);
      }
      delay(1000); 
    }

    {
      st7735.fillScreen(ST7735Color.BLACK);
      st7735.drawTextKanji(0,0,"塗りつぶし矩形",ST7735Color.WHITE, ST7735Color.BLACK, 1);
      for (int i=0;i<10;i++) {
        int c = rand() % 0xFFFF;
        st7735.fillRect(i*5 , 16+i*5, st7735.getWidth()-i*5,st7735.getHeight()-i*5,c);
      }
      delay(1000); 
    }

    {
      st7735.fillScreen(ST7735Color.BLACK);
      st7735.drawTextKanji(0, 0, "円・塗りつぶし円", ST7735Color.WHITE, ST7735Color.BLACK, 1);

      const int numCircles = 5;
      int x[numCircles];
      int y[numCircles];
      int dx[numCircles];
      int dy[numCircles];
      uint16_t colors[numCircles];

      // ランダムな初期位置と速度を設定
      randomSeed(analogRead(0)); // ランダムシードを初期化
      for (int i = 0; i < numCircles; i++) {
        x[i] = random(10, st7735.getWidth() - 10); // 範囲: 10〜(幅-10)
        y[i] = random(26, st7735.getHeight() - 10); // 範囲: 26〜(高さ-10)
        dx[i] = random(0, 2) == 0 ? 4 : -4; // ランダムな方向
        dy[i] = random(0, 2) == 0 ? 4 : -4; // ランダムな方向
        colors[i] = random(0, 0xFFFF);
      }

      // 円を動作させる
      for (int i = 0; i < 200; i++) {
        for (int j = 0; j < numCircles; j++) {
          // 現在の円を消す
          if (i < 100) {
            st7735.drawCircle(x[j], y[j],8, ST7735Color.BLACK);
          } else {
            st7735.fillCircle(x[j], y[j],8, ST7735Color.BLACK);
          }          // 位置を更新

          // 画面の端で跳ね返る
          if (x[j] >= (st7735.getWidth() - 5) || x[j] <= 5) dx[j] = -dx[j];
          if (y[j] >= (st7735.getHeight() - 5) || y[j] <= 20) dy[j] = -dy[j];

          x[j] += dx[j];
          y[j] += dy[j];
          if (i < 100) {
            st7735.drawCircle(x[j], y[j], 8, colors[j]);
          } else {
            st7735.fillCircle(x[j], y[j], 8, colors[j]);
          }
        }
        delay(20);
      }
    }
    delay(1000); 
    {
      st7735.fillScreen(ST7735Color.BLACK);
      st7735.drawTextKanji(0, 0, "三角形", ST7735Color.WHITE, ST7735Color.BLACK, 1);

      int16_t centerX = st7735.getWidth()/2;
      int16_t centerY = st7735.getHeight()/2;
      int radiusIncrement = 5; // 半径の増加量
      int initialRadius = 20;   // 初期半径

      for (int i = 0; i < 10; i++) {
        int radius = initialRadius + i * radiusIncrement;
        // 三角形の頂点座標を計算
        int16_t x0 = centerX + radius * cos(0 * PI / 180);    // 上の頂点
        int16_t y0 = centerY + radius * sin(0 * PI / 180);
        int16_t x1 = centerX + radius * cos(120 * PI / 180);  // 左下の頂点
        int16_t y1 = centerY + radius * sin(120 * PI / 180);
        int16_t x2 = centerX + radius * cos(240 * PI / 180);  // 右下の頂点
        int16_t y2 = centerY + radius * sin(240 * PI / 180);

        // 三角形を描画
        st7735.drawTriangle(x0, y0, x1, y1, x2, y2, random(0, 0xFFFF)); // 色は10色を循環
      }
      delay(1000);
    }

    {
      st7735.fillScreen(ST7735Color.BLACK);
      st7735.drawTextKanji(0, 0, "塗りつぶし三角形", ST7735Color.WHITE, ST7735Color.BLACK, 1);

      int16_t centerX = st7735.getWidth()/2;
      int16_t centerY = st7735.getHeight()/2;
      int radiusIncrement = 5; // 半径の増加量
      int initialRadius = 20;   // 初期半径

      for (int i = 0; i < 10; i++) {
        int radius = initialRadius + i * radiusIncrement;
        // 三角形の頂点座標を計算
        int16_t x0 = centerX + radius * cos(0 * PI / 180);    // 上の頂点
        int16_t y0 = centerY + radius * sin(0 * PI / 180);
        int16_t x1 = centerX + radius * cos(120 * PI / 180);  // 左下の頂点
        int16_t y1 = centerY + radius * sin(120 * PI / 180);
        int16_t x2 = centerX + radius * cos(240 * PI / 180);  // 右下の頂点
        int16_t y2 = centerY + radius * sin(240 * PI / 180);

        // 三角形を描画
        st7735.fillTriangle(x0, y0, x1, y1, x2, y2, random(0, 0xFFFF)); // 色は10色を循環
      }
    }

    {
      st7735.fillScreen(ST7735Color.BLACK);
      st7735.drawTextKanji(0,30,"詳しい使い方やカスタマイズ方法については、https://qiita.com/BUBUBB/items/3caf2aefba4ae3a715e1 を参照してください",ST7735Color.WHITE, ST7735Color.BLACK, 1);

      st7735.setFont(fonts[1]);
      st7735.bmpUseTransColor(0x0001);
      st7735.drawText(11,21,"<END>",ST7735Color.GRAY, 0x0001, 1);
      st7735.drawText(11,20,"<END>",ST7735Color.GRAY, 0x0001, 1);
      st7735.drawText(11,21,"<END>",ST7735Color.GRAY, 0x0001, 1);
      st7735.drawText(10,20,"<END>",ST7735Color.WHITE, 0x0001, 1);
      st7735.bmpUnuseTransColor();
    }
    delay(1000);         
}
